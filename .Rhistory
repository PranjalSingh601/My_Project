Train<- read.csv('train.csv’, stringsAsFactors = F)
Test<-read.csv(‘test.csv’,stringAsFactors=F)
full  <- bind_rows(train, test)
str(full)
full$Title <- gsub('(.*, )|(\\..*)', '', full$Name)
full$Title<-str_replace(full$Title,"Mlle","Miss")
full$Title<-str_replace(full$Title,"Mme","Mrs")
table(full$Sex,full$Title)
full$Title<-str_replace(full$Title,"Capt","Rare Title")
full$Title<-str_replace(full$Title,"Col","Rare Title")
full$Title<-str_replace(full$Title,"Don","Rare Title")
full$Title<-str_replace(full$Title,"Dona","Rare Title")
full$Title<-str_replace(full$Title,"Jonkheer","Rare Title")
full$Title<-str_replace(full$Title,"Lady","Rare Title")
full$Title<-str_replace(full$Title,"Major","Rare Title")
full$Title<-str_replace(full$Title,"Rev","Rare Title")
full$Title<-str_replace(full$Title,"Sir","Rare Title")
full$Title<-str_replace(full$Title,"the Countess","Rare Title")
full$Title<-str_replace(full$Title,"Dr","Rare Title")
table(full$Sex,full$Title)
full$Title<-str_replace(full$Title,"Rare Titlea","Rare Title")
table(full$Sex,full$Title)
str(full)
full$Name
full$Surname<-gsub('(\\.*)','',full$Name)
full$Surname
full$Surname<-sapply(full$Name,function(x){strsplit(x,split = '[,.]')}[[1]][1])
full$Surname
head(full)
unique(full$Surname)
attach(full)
full<-full %>% mutate(Fsize=SibSp+Parch+1)
head(full)
full$Family<-paste(Surname,Fsize,sep = '_')
head(full)
max(Fsize)
library(ggplot2)
nrow(train)
ggplot(full[1:891,],aes(x=Fsize,fill=factor(Survived))) + geom_bar(stat = 'count',position = 'dodge') + scale_x_continuous(breaks = c(1:11))+labs(x="Family size")
full$FsizeD[full$Fsize==1]<-"Single"
names(full)
full$FsizeD[full$Fsize>1 & full$Fsize<4]<-"Small"
unique(full$FsizeD)
full$FsizeD[full$Fsize>4]<-"Large"
mosaicplot(table(full$FsizeD,full$Survived),main = "Family Size by Survival",shade = TRUE)
sum(is.na(full))
sum(is.na(full$Age))
full$Cabin
head(full)
strsplit(full$Cabin,NULL)
strsplit(full$Cabin)
strsplit(full$Cabin[2],NULL)
strsplit(full$Cabin[2],NULL)[[1]]
strsplit(full$Cabin[2],NULL)[[2]]
strsplit(full$Cabin[2],NULL)[[1]][2]
strsplit(full$Cabin,NULL)[[1]][2]
strsplit(full$Cabin,NULL)
full$Deck<-factor(sapply(full$Cabin,function(x){strsplit(x,NULL)[[1]][1]}))
head(full$Deck)
head(full)
levels(full$Deck)
glimpse(full)
sum(is.na(full$Embarked))
head(full,50)
full[c(62,830),'Embarked']
is.na(full$Embarked)
sum(is.na(full$Embarked))
full
full$Embarked
which(is.na(full))
full[c(62,830),]
full %>% filter(Pclass==1 & Fare==80)
full %>% filter(Pclass==1)
embark_fare<-full %>% filter(PassengerId !=62 & PassengerId !=830)
library(scales)
ggplot(embark_fare,aes(x=Embarked,y=Fare,fill=factor(Pclass))) + geom_boxplot() + geom_hline(aes(yintercept=80),colour='blue',linetype='dashed',lwd=2) +scale_y_continuous(labels = dollar_format())
full$Embarked[c(62,830)]<-"C"
full[c(62,830),]
which(is.na(full$Fare))
full[1044,]
ggplot(full[full$Pclass==3 & full$Embarked=="S",],aes(x=Fare)) + geom_density(fill='#99d8ff',alpha=0.5) +geom_vline(aes(xintercept=median(Fare,na.rm = TRUE)),colour="red",linetype="dashed",lwd=1) + scale_x_continuous(labels = dollar_format())
full$Fare[1044]
full$Fare[1044]<-median(full[full$Pclass==3 & full$Embarked=="S",]$Fare,na.rm = TRUE)
full$Fare[1044]
sum(is.na(full$Age))
names(full)
str(full)
attach(full)
factor_vars<-c("PassengerId","Pclass","Sex","Embarked","Title","Surname","Family","FsizeD")
full[factor_vars]<-lapply(full[factor_vars],function(x){as.factor(x)})
str(full)
set.seed(129)
names(full)
install.packages("mice")
library("mice")
names(full)
mice_mod<-mice(full[,!names(full) %in% c("PassengerId","Name","Ticket","Cabin","Family","Surname","Survived")],method = "rf")
mice_mod
complete(mice_mod)
mice_output$age
mice_output<-complete(mice_mod)
mice_output$Age
par(mfrow=c(1,2))
hist(full$Age,freq = F, main = 'Age')
hist(mice_output$Age,freq = F, main = 'Age: MICE output')
full$age<-mice_output$Age
sum(is.na(full$age))
ggplot(full[1:891,],aes(Age,fill=factor(Survived)))+ geom_histogram()+facet_grid(.~Sex)
full$Child[full$Age<18]<-"Child"
full$Child[full$Age>=18]<-"Adult"
head(full)
table(full$Child,full$Survived)
str(full)
table(full$Child,full$Survived)
full$Child
full$Mother<-"Not Mother"
full$Mother[full$Sex=="female" & full$Age>18 & full$Parch>0 & full$Title !="Miss"]<-"Mother"
table(full$Mother,full$Survived)
table(full$Child,full$Survived)
full$Child<-factor(full$Child)
full$Mother<-factor(full$Mother)
class(full$Child)
md.pattern(full)
Train<-full[1:891,]
Test<-full[892:nrow(full)]
Test<-full[892:nrow(full),]
View(Train)

set.seed(754)
names(Train)
class(Train$Survived)
levels(Train$Survived)
levels(Train$Survived)<-list(No="0",Yes="1")
levels(Test$Survived)<-list(No="0",Yes="1")
levels(Test$Survived)

rf_model<-train(Survived~Pclass+Sex+Age+SibSp+Parch+Fare+Embarked+Title+FsizeD+Child+Mother,data=Train,method="ranger",metric="ROC",importance="impurity",trControl=trainControl(method = "CV",number = 5,verboseIter = T,classProbs = T,summaryFunction = twoClassSummary))

library(caTools)
predict_Train<-predict(rf_model,Train,type = "prob")
colAUC(predict_Train,Train$Survived,plotROC = T)
prediction<-predict(rf_model,Test)

class(prediction)
levels(prediction)<-list("0"="No","1"="Yes")
levels(prediction)
class(prediction)

solution <- data.frame(PassengerID = Test$PassengerId, Survived = prediction)
write.csv(solution,"solution.csv",row.names = F)
VarImp(rf_model)

